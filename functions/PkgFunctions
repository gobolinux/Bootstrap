#!/bin/sh

TOP_DIR=..
shipped_dir=$TOP_DIR/recipes
source ScriptFunctions

#
# This function relies on the fact that the package is correctly named 
# and stored as a subdirectory inside $(TOPDIR)/packages.
#
# The package's name can be guessed by finding the correct 'config PKG_NAME'
# inside the proper Config.in. Its name is then revealed by reading the 
# directory's name which holds that file.
#
function package_subdir() {
    pkg_dir=`echo $1 | cut -d"=" -f1`
    entry=`find . -name Config.in | xargs grep "config $pkg_dir$"`
    echo $entry | cut -d"/" -f1-2 | sed 's/\.\///g'
}

function cvs_checkout() {
    if [ ! -d "$1" ]
    then
        cvs -z3 -d:pserver:anonymous@cvs.savannah.nongnu.org:/sources/goboscripts co -d "$1" "$2"
    else
        pushd "$1" >& /dev/null
        cvs update
        popd >& /dev/null
    fi
}

function cvs_make_install() {
    module="$1"
    app_dir="$2"
    version_dir="$3"
    shift 3
	
    mkdir -p "$app_dir/$version_dir"

    [ "$cross_compiling" ] && source "$goboSettings/Compile/Cross-$arch_conf.conf"
    
    pushd "$module" >& /dev/null
    make CC=$CC "$@" || exit 1
    make CC=$CC install PREFIX="$app_dir/$version_dir" "$@" || exit 1
    cp -a * "$app_dir/$version_dir"
    popd >& /dev/null

    pushd "$app_dir" >& /dev/null
    rm -f Current
    ln -s "$version_dir" Current
    popd >& /dev/null
    
    pushd "$app_dir/Current" >& /dev/null
    find . -name CVS | xargs rm -Rf 2> /dev/null
    find . -name CVS | xargs rmdir  2> /dev/null
    popd >& /dev/null
}

function DirectFB_hook() {
    [ ! "$cross_compiling" ] && return
    [ "$cross_kernel_arch" = "sh" ] && echo "CVS"
}

function Glibc_hook() {
    [ ! "$cross_compiling" ] && return
    [ "$cross_kernel_arch" = "sh" ]  && echo 2.3.6
    [ "$cross_kernel_arch" = "arm" ] && echo 2.4
}

function GTK_hook() {
    [ ! "$cross_compiling" ] && return
    # use a version which doesn't depend on Cairo
    echo "2.6.10"
}

function Linux() {
    [ ! "$cross_compiling" ] && return
    echo "$cross_kernel_version"
}

function Linux_Fusion_hook() {
    # always fetch from CVS
    echo "CVS"
}

function Udev_hook() {
    [ ! "$cross_compiling" ] && return
    echo "070"
    
#    kernel_version=`echo $cross_kernel_version | sed 's/-.*//g'`
#    latest_kernel=`GuessLatest $cross_kernel_version 2.6.15`
#    [ "$kernel_version" = "$latest_kernel" ] && return

    # if cross_kernel_version for cross-compile is older than 2.6.15,
    # recommend usage of Udev 070 instead of the latest release.
#    [ "$latest_kernel" = "2.6.15" ] && echo "070"
}

function XFCE_hook() {
    [ ! "$cross_compiling" ] && return
    echo "4.2.3.2"
}
