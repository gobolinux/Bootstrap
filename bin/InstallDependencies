#!/bin/sh

TOP_DIR=..
export PATH=$PATH:$TOP_DIR/functions

source PkgFunctions
source ScriptFunctions
source $TOP_DIR/.config
source $TOP_DIR/functions/Platforms

#
# Checks for ChrootCompile
#
dirname="$goboPrograms/ChrootCompile"
[ ! -d "$dirname" ] && Die "Please install ChrootCompile first"

#
# Create the chroot environment
#
got_glibc=`ls $TOP_DIR/chroot/BaseDependencies/Glibc--* 2> /dev/null`
if [ ! "$got_glibc" ]
then
    Log_Normal "Creating the ChrootCompile environment..."
    mkdir -p "$TOP_DIR/chroot"
    Quiet pushd "$TOP_DIR/chroot"
    SetupChrootEnv --quiet
    Quiet popd

    got_glibc=`ls $TOP_DIR/chroot/BaseDependencies/Glibc--* 2> /dev/null`
    [ ! "$got_glibc" ] && Die "Could not get files from rsync"
fi

function check_consistency() {
    diff "$1" "$2" >& /dev/null && return

    if [ "$3" = "host" ]
    then
        cp -fv "$1" "$2"
    elif [ "$3" = "biggest" ]
    then
        # the biggest the better
        if [ `wc -l "$1" | awk {'print $1'}` -ge `wc -l "$2" | awk {'print $1'}` ]
        then cp -fv "$1" "$2"
        else cp -fv "$2" "$1"
        fi
    fi
}

#
# Check for consistency between the host's cross conf files and
# the ones fetched by SetupChrootEnv.
#
if [ ! "$NATIVE_COMPILING" ]
then
    hostdir=$goboSettings/Compile/Cross
    [ ! -d "$hostdir" ] && Die "$hostdir not found. Please update your Compile/Scripts packages."

    # get the cross_cache_file variable
    target_arch=`get_chosen_arch`
    `cat $goboSettings/Compile/Cross/Cross-$target_arch.conf | grep "cross_cache_file=" | sed 's/\"//g'`
    
    # check settings on /Programs/Compile and chroot/Unpacked/i686/Compile
    local_arch=`get_native_arch`
    unpackeddir="$TOP_DIR/chroot/Unpacked/$local_arch"
    if [ ! -d "$unpackeddir/Compile" ]
    then
        mkdir -p "$unpackeddir"
        Quiet pushd "$unpackeddir"
        tarball=`readlink -f ../../BaseDependencies/Compile--*.tar.bz2`
        aunpack --quiet "$tarball" || Die "Could not find Compile at $unpackeddir/../../BaseDependencies"
        Quiet popd
    fi

    rsyncdir=`readlink -f $unpackeddir/Compile/*/Resources/Defaults/Settings/Compile/Cross`
    check_consistency $hostdir/Cross-$target_arch.conf $rsyncdir/Cross-$target_arch.conf host
    check_consistency $hostdir/Cross-Common.conf       $rsyncdir/Cross-Common.conf       host
    check_consistency $hostdir/Cross-ResetEnv.conf     $rsyncdir/Cross-ResetEnv.conf     host
    check_consistency $hostdir/$cross_cache_file       $rsyncdir/$cross_cache_file       biggest
fi
