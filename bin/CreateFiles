#!/bin/sh

TOP_DIR=..
source $TOP_DIR/.config

prefix="$1"
super_user="$2"

#
# Users database files
#
group_file=$prefix/$goboSettings/group
if [ ! -f $group_file ]
then
    echo "$super_user:x:0:" >> $group_file
    echo "bin:x:1:"         >> $group_file
    echo "sys:x:2:"         >> $group_file
    echo "nobody:x:3:"      >> $group_file
    echo "users:x:100:"     >> $group_file
fi

passwd_file=$prefix/$goboSettings/passwd
if [ ! -f $passwd_file ]
then
    echo "$super_user::0:0:$super_user:/Users/$super_user:/bin/sh" >> $passwd_file
fi

shadow_file=$prefix/$goboSettings/shadow
if [ ! -f $shadow_file ]
then
    echo "$super_user::12889:0:::::" >> $shadow_file
fi

#
# Networking stuff
#
hosts_file=$prefix/$goboSettings/hosts
if [ ! -f $hosts_file ]
then
    echo "127.0.0.1       localhost $NEW_HOSTNAME" >> $hosts_file
fi

resolv_conf_file=$prefix/$goboSettings/resolv.conf
if [ ! -f $resolv_conf_file -a "$NETWORK_DHCP" != "y" ]
then
    echo "nameserver $NETWORK_NAMESERVER" >> $resolv_conf_file
elif [ ! -f $resolv_conf_file ]
then
    touch $resolv_conf_file
fi

network_task_file=$prefix/$goboSettings/NetworkSettings
if [ ! -f $network_task_file ]
then
    if [ "$NETWORK_STATIC" = "y" ]
    then
        NetworkInterfacesOnBoot="lo eth0"
        GatewayInterface="eth0"
    elif [ "$NETWORK_DHCP" = "y" ]
    then
        NetworkInterfacesOnBoot="lo eth0"
        GatewayInterface=
    else # NETWORK_DISABLED
        NetworkInterfacesOnBoot="lo"
        GatewayInterface=
    fi
    
    cat << EOF > $network_task_file
NetworkInterfacesOnBoot="$NetworkInterfacesOnBoot"

lo_IP=127.0.0.1
lo_Netmask=255.0.0.0

# leave the IP address blank if you want to use DHCP
eth0_IP=$NETWORK_IPADDR
eth0_Netmask=$NETWORK_NETMASK

Gateway=$NETWORK_DEFAULT_GATEWAY
GatewayInterface=$GatewayInterface
EOF
fi

environment_check_file=$prefix/$goboTasks/EnvironmentCheck
if [ ! -f $environment_check_file ]
then
    echo "# TODO: do this once"                  >> $environment_check_file
    echo "update-mime-database $goboShared/mime" >> $environment_check_file
    echo "fc-cache"                              >> $environment_check_file
    chmod +x $environment_check_file
fi

#
# Initialization
#
fstab_file=$prefix/$goboSettings/fstab
if [ ! -f $fstab_file ]
then
    echo "/dev/hda1 /             auto   defaults 1 1" >  $fstab_file
    echo "none      /proc         proc   defaults 0 0" >> $fstab_file
    echo "none      /proc/bus/usb usbfs  defaults 0 0" >> $fstab_file
    echo "none      /sys          sysfs  defaults 0 0" >> $fstab_file
    echo "none      /dev/pts      devpts defaults 0 0" >> $fstab_file
    echo "none      /dev/shm      tmpfs  defaults 0 0" >> $fstab_file
    echo "none      /var/tmp      tmpfs  defaults 0 0" >> $fstab_file
fi

ld_so_cache_file=$prefix/$goboSettings/ld.so.cache
ld_so_conf_file=$prefix/$goboSettings/ld.so.conf
if [ ! -a $ld_so_conf_file ]
then
    if [ "$PKG_GLIBC" = "y" ]
    then
        ln -nfs $prefix/$goboPrograms/Glibc/Settings/ld.so.cache $ld_so_cache_file
        ln -nfs $prefix/$goboPrograms/Glibc/Settings/ld.so.conf  $ld_so_conf_file
    else
        echo "$prefix/$goboLibraries" > $ld_so_conf_file
    fi
fi

mtab_file=$prefix/$goboSettings/mtab
if [ ! -e $mtab_file ]
then
    ln -s $goboStatus/mounts $mtab_file
fi

#
# Enhanced skel
#
xinitrc_file=$prefix/$goboUsers/$super_user/.xinitrc
if [ ! -e $xinitrc_file ]
then
    cat << EOF > $xinitrc_file
[ -x /bin/xfce  ] && exec xfce  || \
[ -x /bin/icewm ] && exec icewm || \
[ -x /bin/rxvt  ] && exec rxvt  || \
[ -x /bin/xterm ] && exec xterm
EOF
fi

#
# GoboLinux version
#
version_file=$prefix/$goboSettings/GoboLinuxVersion
if [ ! -e $xinitrc_file ]
then
    echo "GoboLinux from Scratch - `date +%Y-%m-%d`" > $version_file
fi
