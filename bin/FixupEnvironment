#!/bin/sh

#
# After the system is cross-compiled, ensure that we have a sane
# environment ready to be used.
# 
# Author: Lucas Correia Villa Real <lucasvr@gobolinux.org>
#

TOP_DIR=..
export PATH=$PATH:$TOP_DIR/functions

source PkgFunctions
source ScriptFunctions
source $TOP_DIR/.config
source $TOP_DIR/functions/Platforms

function cleanup() {
    cd "$TOP_DIR/bin"
    ./BootStrap stop
}

trap cleanup TERM INT STOP HUP

if [ "$CROSS_NONE" = "y" ]
then 
    # nothing to do
    exit 0
else
    export arch_conf=`get_chosen_arch`
    source $goboSettings/Compile/Cross-$arch_conf.conf
    prefix="$cross_prefix_dir"

    export goboCrossCompiling=yes
fi

echo

#
# Create a new ld.so.conf
#
if [ -d "$prefix/$goboPrograms/Glibc/Settings" ]
then
    Log_Normal "Generating a new ld.so.cache..."
    echo "$prefix/$goboLibraries" > "$prefix/$goboPrograms/Glibc/Settings/ld.so.conf"
    ldconfig -f "$prefix/$goboPrograms/Glibc/Settings/ld.so.conf" \
             -C "$prefix/$goboPrograms/Glibc/Settings/ld.so.cache"
    ln -nfs "$prefix/$goboPrograms/Glibc/Settings/ld.so.conf"  "$prefix/$goboSettings"
    ln -nfs "$prefix/$goboPrograms/Glibc/Settings/ld.so.cache" "$prefix/$goboSettings"
fi

#
# Install the Tiny Scripts package
#
dirname="$prefix/$goboPrograms/TinyScripts"
if [ ! -d "$dirname" -a "$TARGET_EMBEDDED" = "y" ]
then
    pushd "$TOP_DIR/downloads" >& /dev/null
    Log_Normal "Installing the Tiny Scripts package..."
    rm -Rf tools/TinyScripts
    cvs_checkout TinyScripts tools/TinyScripts

    version="`date +%Y%m%d`-CVS"
    cvs_make_install TinyScripts "$dirname" "$version"
    UpdateSettings TinyScripts "$version"
    SymlinkProgram -c overwrite TinyScripts
    popd >& /dev/null
fi
